{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_feeRecipient",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					}
				],
				"name": "SafeERC20FailedOperation",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint16",
						"name": "defaultFeeBps",
						"type": "uint16"
					},
					{
						"indexed": false,
						"internalType": "uint16",
						"name": "maxFeeBps",
						"type": "uint16"
					}
				],
				"name": "FeesUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "creator",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "stake",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "opponent",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "startDeadline",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "resolveWindow",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "resolver",
						"type": "address"
					}
				],
				"name": "MatchCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "opponent",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "resolveDeadline",
						"type": "uint256"
					}
				],
				"name": "MatchJoined",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "MatchRefunded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "winner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "prize",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "fee",
						"type": "uint256"
					}
				],
				"name": "MatchResolved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "submitter",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "winner",
						"type": "address"
					}
				],
				"name": "MatchResultSubmitted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "resolver",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "allowed",
						"type": "bool"
					}
				],
				"name": "ResolverSet",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint96",
						"name": "stake",
						"type": "uint96"
					},
					{
						"internalType": "address",
						"name": "opponent",
						"type": "address"
					},
					{
						"internalType": "uint32",
						"name": "startDeadlineSec",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "resolveWindowSec",
						"type": "uint32"
					},
					{
						"internalType": "address",
						"name": "resolver",
						"type": "address"
					}
				],
				"name": "createMatch",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint96",
						"name": "stake",
						"type": "uint96"
					},
					{
						"internalType": "address",
						"name": "opponent",
						"type": "address"
					},
					{
						"internalType": "uint32",
						"name": "startDeadlineSec",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "resolveWindowSec",
						"type": "uint32"
					},
					{
						"internalType": "address",
						"name": "resolver",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "permitValue",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "permitDeadline",
						"type": "uint256"
					},
					{
						"internalType": "uint8",
						"name": "v",
						"type": "uint8"
					},
					{
						"internalType": "bytes32",
						"name": "r",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "s",
						"type": "bytes32"
					}
				],
				"name": "createMatchWithPermit",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "defaultFeeBps",
				"outputs": [
					{
						"internalType": "uint16",
						"name": "",
						"type": "uint16"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "feeRecipient",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "getMatch",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "creator",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "opponent",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "token",
								"type": "address"
							},
							{
								"internalType": "uint96",
								"name": "stake",
								"type": "uint96"
							},
							{
								"internalType": "uint40",
								"name": "createdAt",
								"type": "uint40"
							},
							{
								"internalType": "uint40",
								"name": "startDeadline",
								"type": "uint40"
							},
							{
								"internalType": "uint40",
								"name": "resolveDeadline",
								"type": "uint40"
							},
							{
								"internalType": "uint32",
								"name": "resolveWindow",
								"type": "uint32"
							},
							{
								"internalType": "address",
								"name": "resolver",
								"type": "address"
							},
							{
								"internalType": "uint16",
								"name": "feeBps",
								"type": "uint16"
							},
							{
								"internalType": "enum Connect4Stakes.Status",
								"name": "status",
								"type": "uint8"
							},
							{
								"internalType": "address",
								"name": "winner",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "creatorVote",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "opponentVote",
								"type": "address"
							}
						],
						"internalType": "struct Connect4Stakes.Match",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "isResolver",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "joinMatch",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "matches",
				"outputs": [
					{
						"internalType": "address",
						"name": "creator",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "opponent",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint96",
						"name": "stake",
						"type": "uint96"
					},
					{
						"internalType": "uint40",
						"name": "createdAt",
						"type": "uint40"
					},
					{
						"internalType": "uint40",
						"name": "startDeadline",
						"type": "uint40"
					},
					{
						"internalType": "uint40",
						"name": "resolveDeadline",
						"type": "uint40"
					},
					{
						"internalType": "uint32",
						"name": "resolveWindow",
						"type": "uint32"
					},
					{
						"internalType": "address",
						"name": "resolver",
						"type": "address"
					},
					{
						"internalType": "uint16",
						"name": "feeBps",
						"type": "uint16"
					},
					{
						"internalType": "enum Connect4Stakes.Status",
						"name": "status",
						"type": "uint8"
					},
					{
						"internalType": "address",
						"name": "winner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "creatorVote",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "opponentVote",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maxFeeBps",
				"outputs": [
					{
						"internalType": "uint16",
						"name": "",
						"type": "uint16"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "nextMatchId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "pot",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "refundIfUnjoined",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "winner",
						"type": "address"
					}
				],
				"name": "resolveByReferee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint16",
						"name": "_defaultFeeBps",
						"type": "uint16"
					},
					{
						"internalType": "uint16",
						"name": "_maxFeeBps",
						"type": "uint16"
					}
				],
				"name": "setFees",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "allowed",
						"type": "bool"
					}
				],
				"name": "setResolver",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "winner",
						"type": "address"
					}
				],
				"name": "submitResult",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "withdrawAfterTimeout",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "withdrawnAfterTimeout",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				],
				"SafeERC20FailedOperation(address)": [
					{
						"details": "An operation with an ERC-20 token failed."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"createMatch(address,uint96,address,uint32,uint32,address)": {
					"params": {
						"opponent": "If nonzero, only this address may join. Zero => open challenge",
						"resolveWindowSec": "Seconds allowed for resolution after opponent joins (>= 300)",
						"resolver": "Optional per-match referee (can be zero)",
						"stake": "Amount each player must deposit (same token decimals for both)",
						"startDeadlineSec": "Seconds from now for the join window (>= 60)",
						"token": "ERC-20 token address for stakes"
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"submitResult(uint256,address)": {
					"params": {
						"id": "Match id",
						"winner": "Claimed winner (must be creator or opponent)"
					}
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"createMatch(address,uint96,address,uint32,uint32,address)": {
					"notice": "Create a match (creator must approve this contract for `stake` first, unless using permit)."
				},
				"createMatchWithPermit(address,uint96,address,uint32,uint32,address,uint256,uint256,uint8,bytes32,bytes32)": {
					"notice": "Same as createMatch but uses EIP-2612 permit so the creator can skip an approve tx."
				},
				"joinMatch(uint256)": {
					"notice": "Opponent joins an existing match by depositing the same stake.         If opponent was unspecified (open challenge), the caller becomes opponent."
				},
				"refundIfUnjoined(uint256)": {
					"notice": "If nobody joined by startDeadline, creator refunds their stake."
				},
				"resolveByReferee(uint256,address)": {
					"notice": "Referee path: per-match resolver, global resolver, or owner can finalize anytime after start."
				},
				"submitResult(uint256,address)": {
					"notice": "Players submit their view of the winner. If both match, payout immediately."
				},
				"withdrawAfterTimeout(uint256)": {
					"notice": "If a started match wasn't resolved by resolveDeadline, each player can withdraw their own stake.         When both have withdrawn, status flips to Refunded."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Connect4Stakes.sol": "Connect4Stakes"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": [],
		"viaIR": true
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/interfaces/IERC1363.sol": {
			"keccak256": "0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d",
			"license": "MIT",
			"urls": [
				"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100",
				"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d"
			]
		},
		"@openzeppelin/contracts/interfaces/IERC165.sol": {
			"keccak256": "0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc",
			"license": "MIT",
			"urls": [
				"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037",
				"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ"
			]
		},
		"@openzeppelin/contracts/interfaces/IERC20.sol": {
			"keccak256": "0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44",
			"license": "MIT",
			"urls": [
				"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d",
				"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF"
			]
		},
		"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
			"license": "MIT",
			"urls": [
				"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
				"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2",
			"license": "MIT",
			"urls": [
				"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303",
				"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV"
			]
		},
		"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
			"keccak256": "0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4",
			"license": "MIT",
			"urls": [
				"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a",
				"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV"
			]
		},
		"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
			"keccak256": "0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5",
			"license": "MIT",
			"urls": [
				"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508",
				"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c",
			"license": "MIT",
			"urls": [
				"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617",
				"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u"
			]
		},
		"Connect4Stakes.sol": {
			"keccak256": "0x6179cd98efad38e573989ce1d01a1ea3c897a566cb2829c77587e84e7eaab9e5",
			"license": "MIT",
			"urls": [
				"bzz-raw://329fe7d991a91535a4ba5550842ef379a52dff54953360a8f618d6989d47daa6",
				"dweb:/ipfs/QmPiNre3MZtjs9N6R6GfcjGJjogHCnPCBHVmg8QSJDn2ng"
			]
		}
	},
	"version": 1
}